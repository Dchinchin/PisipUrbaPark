// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using UrbaPark.Dominio.Modelo.Entidades;

namespace UrbaPark.Infraestructura.AccesoDatos;

public partial class Pisip_UrbanParkContext : DbContext
{
    public Pisip_UrbanParkContext()
    {
    }

    public Pisip_UrbanParkContext(DbContextOptions<Pisip_UrbanParkContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Bitacora> Bitacora { get; set; }
    public virtual DbSet<Detalle_Informe> Detalle_Informe { get; set; }
    public virtual DbSet<Informes_Encabezado> Informes_Encabezado { get; set; }
    public virtual DbSet<Mantenimiento> Mantenimientos { get; set; }
    public virtual DbSet<Parquadero> Parquadero { get; set; }
    public virtual DbSet<Roles> Roles { get; set; }
    public virtual DbSet<TipoMantenimiento> TipoMantenimiento { get; set; }
    public virtual DbSet<Usuarios> Usuarios { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            // This is intentionally left empty. The connection string should be configured in Program.cs
            // using DbContextOptions<Pisip_UrbanParkContext> in the constructor.
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Bitacora>(entity =>
        {
            entity.HasKey(e => e.IdBitacora).HasName("PK__Bitacora__7E4268B0866136D2");

            entity.Property(e => e.IdBitacora).HasColumnName("id_bitacora");
            entity.Property(e => e.IdInforme).HasColumnName("id_informe");
            entity.Property(e => e.IdMantenimiento).HasColumnName("id_mantenimiento");
            entity.Property(e => e.FechaHora).HasColumnName("fecha_hora").HasColumnType("datetime");
            entity.Property(e => e.Descripcion).HasColumnName("descripcion").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.ImagenUrl).HasColumnName("imagen_url").HasMaxLength(80).IsUnicode(false);

            entity.HasOne(d => d.IdInformeNavigation).WithMany(p => p.Bitacoras)
                .HasForeignKey(d => d.IdInforme)
                .HasConstraintName("FK__Bitacora__id_inf__44FF419A");

            entity.HasOne(d => d.IdMantenimientoNavigation).WithMany(p => p.Bitacoras)
                .HasForeignKey(d => d.IdMantenimiento)
                .HasConstraintName("FK__Bitacora__id_man__XXXXXX");
        });

        modelBuilder.Entity<Detalle_Informe>(entity =>
        {
            entity.HasKey(e => e.id_detInfo).HasName("PK__Detalle___888420765569AF1A");

            entity.Property(e => e.archivo_url).HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.descripcion).HasMaxLength(80).IsUnicode(false);

            entity.HasOne(d => d.id_informeNavigation).WithMany(p => p.Detalle_Informe)
                .HasForeignKey(d => d.id_informe)
                .HasConstraintName("FK__Detalle_I__id_in__4AB81AF0");
        });

        modelBuilder.Entity<Informes_Encabezado>(entity =>
        {
            entity.HasKey(e => e.IdInforme).HasName("PK__Informes__ECCCE10F31757FB6");
            
            entity.Property(e => e.IdInforme).HasColumnName("id_informe");
            entity.Property(e => e.IdMantenimiento).HasColumnName("id_mantenimiento");
            entity.Property(e => e.Fecha).HasColumnName("fecha").HasColumnType("datetime");

            entity.HasOne(d => d.IdMantenimientoNavigation).WithMany(p => p.Informes_Encabezados)
                .HasForeignKey(d => d.IdMantenimiento)
                .HasConstraintName("FK__Informes___id_ma__47DBAE45");
        });

        modelBuilder.Entity<Mantenimiento>(entity =>
        {
            entity.HasKey(e => e.IdMantenimiento).HasName("PK__Mantenim__BEB925820A59D82B");

            entity.ToTable("Mantenimiento");

            entity.Property(e => e.IdMantenimiento).HasColumnName("id_mantenimiento");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdParqueadero).HasColumnName("id_parqueadero");
            entity.Property(e => e.IdTipomantenimiento).HasColumnName("id_tipomantenimiento");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio").HasColumnType("datetime");
            entity.Property(e => e.FechaCreacion).HasColumnName("fecha_creacion").HasColumnType("datetime");
            entity.Property(e => e.FechaFin).HasColumnName("fecha_fin").HasColumnType("datetime");
            entity.Property(e => e.Observaciones).HasColumnName("observaciones").HasMaxLength(80).IsUnicode(false);

            entity.HasOne(d => d.IdParqueaderoNavigation).WithMany(p => p.Mantenimientos)
                .HasForeignKey(d => d.IdParqueadero)
                .HasConstraintName("FK__Mantenimi__id_pa__412EB0B6");

            entity.HasOne(d => d.IdTipomantenimientoNavigation).WithMany(p => p.Mantenimientos)
                .HasForeignKey(d => d.IdTipomantenimiento)
                .HasConstraintName("FK__Mantenimi__id_ti__4222D4EF");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Mantenimientos)
                .HasForeignKey(d => d.IdUsuario)
                .HasConstraintName("FK__Mantenimi__id_us__403A8C7D");
        });
        
        modelBuilder.Entity<TipoMantenimiento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Tipo_Man__3213E83FFE8A8B4F");
            
            entity.ToTable("Tipo_Mantenimiento");
            
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Nombre).HasColumnName("nombre").HasMaxLength(50).IsUnicode(false);
            entity.Property(e => e.Descripcion).HasColumnName("descripcion").HasMaxLength(1000).IsUnicode(false);
        });

        modelBuilder.Entity<Parquadero>(entity =>
        {
            entity.HasKey(e => e.IdParqueadero).HasName("PK__Parquade__0A2A3B21893B63E6");

            entity.Property(e => e.IdParqueadero).HasColumnName("id_parqueadero");
            entity.Property(e => e.Nombre).HasColumnName("nombre").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Direccion).HasColumnName("direccion").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Estado).HasColumnName("estado").HasMaxLength(80).IsUnicode(false);
        });

        modelBuilder.Entity<Roles>(entity =>
        {
            entity.HasKey(e => e.id_rol).HasName("PK__Roles__6ABCB5E0745D9BAC");

            entity.Property(e => e.descripcion).HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.nombre_rol).HasMaxLength(80).IsUnicode(false);
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PK__Usuarios__4E3E04AD51CD0BF7");

            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdRol).HasColumnName("id_rol");
            entity.Property(e => e.Nombre).HasColumnName("nombre").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Apellido).HasColumnName("apellido").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Correo).HasColumnName("correo").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Estado).HasColumnName("estado").HasMaxLength(80).IsUnicode(false);
            entity.Property(e => e.Cedula).HasColumnName("cedula").HasMaxLength(10).IsUnicode(false);
            entity.Property(e => e.Contrasena).HasColumnName("contrasena").HasMaxLength(80).IsUnicode(false);

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdRol)
                .HasConstraintName("FK__Usuarios__id_rol__398D8EEE");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}